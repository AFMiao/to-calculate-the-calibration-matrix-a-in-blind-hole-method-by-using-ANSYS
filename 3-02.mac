! 工作目录
! D:/LEARNING/Courses/IV/FECD/manual/code
FINISH $ /CLEAR
/FILNAME,3-02
/TITLE,3-02
!==========
! 长度单位统一为mm
! 注: 用等式给参数赋值的时候
! 运算符号前后千万不要加空格
D = 5.13 $ D0 = 0.5*D
DEPTH = 1.2*D $ L = 10*D
ENUM_L=10 $ ENUM_ARC=5

R1 = 1.77 $ R2 = 3.36
GL = 1.59 $ GW = 1.59

dh = 0.05 $ n = 20
h = dh*n $ DA = DH*L
SIGMA_X = 100

E = 2.1E5 $ v = 0.3
!==========
/PREP7
ET,1,SOLID186
! KEYOPT,1,2,3

ET,2,MESH200,7

MP,EX,1,E
MP,PRXY,1,v
MP,EX,2,E
MP,PRXY,2,v
!==========
! 建立工件下表面
*DIM,PQRS_1,ARRAY,4
*DO,I,1,4,1
  PQRS_1(I)=I
*ENDDO
K,1,L,L,0  ! P1
K,2,0,L,0  ! Q1
K,3,0,0,0  ! R1
K,4,L,0,0  ! S1
K,5,L/2,L/2,0  ! 中心

*DIM,L_PQRS_1,ARRAY,4
L,1,2 $ L_PQRS_1(1)=_RETURN  ! P1Q1
L,2,3 $ L_PQRS_1(2)=_RETURN  ! Q1R1
L,3,4 $ L_PQRS_1(3)=_RETURN  ! R1S1
L,4,1 $ L_PQRS_1(4)=_RETURN  ! S1P1

*DIM,PQRS_0,ARRAY,4
*DO,I,1,4,1
  PQRS_0(I)=40+I
*ENDDO
K,41,L/2+2*D0,L/2+2*D0,0  ! P0
K,42,L/2-2*D0,L/2+2*D0,0  ! Q0
K,43,L/2-2*D0,L/2-2*D0,0  ! R0
K,44,L/2+2*D0,L/2-2*D0,0  ! S0

*DIM,L_PQRS_0,ARRAY,4
L,41,42 $ L_PQRS_0(1)=_RETURN  ! R0S0
L,42,43 $ L_PQRS_0(2)=_RETURN  ! S0P0
L,43,44 $ L_PQRS_0(3)=_RETURN  ! P0Q0
L,44,41 $ L_PQRS_0(4)=_RETURN  ! Q0R0

*DIM,DIAGONAL1,ARRAY,4
L,1,41 $ DIAGONAL1(1)=_RETURN  ! P0P1
L,2,42 $ DIAGONAL1(2)=_RETURN  ! Q0Q1
L,3,43 $ DIAGONAL1(3)=_RETURN  ! R0R1
L,4,44 $ DIAGONAL1(4)=_RETURN  ! S0S1

 ! 建立过渡圆
CIRCLE,5,(D0/2+R1)/2
ARC_AISSIT1=_RETURN
*DIM,MIDPOINT,ARRAY,4  ! 创建一个储存中点序号的数组
*DO,I,1,4,1
  MIDPOINT(I)=60+I
*ENDDO
*DO,I,0,3,1  ! 创建中点、赋值并分割
  KL,ARC_AISSIT1+I,0.5,MIDPOINT(I+1)
  L,MIDPOINT(I+1),PQRS_0(I+1)
  L_CACHE=_RETURN
  LSBL,ARC_AISSIT1+I,L_CACHE
*ENDDO
LCOMB,17,19,0  ! 不要问我怎么知道是这个数
LCOMB,15,18,0  ! 我就是知道
LCOMB,14,20,0
LCOMB,21,22,0
AL,14,21,15,17
A00=_RETURN

*DIM,DIAGONAL0,ARRAY,4
*DO,I,1,4,1
  L,MIDPOINT(I),PQRS_0(I)
  DIAGONAL0(I)=_RETURN
*ENDDO

!! 建立面
*DO,I,1,3,1
  AL,L_PQRS_1(I),DIAGONAL1(I),DIAGONAL1(I+1),L_PQRS_0(I)
*ENDDO
AL,L_PQRS_1(4),DIAGONAL1(4),DIAGONAL1(1),L_PQRS_0(4)

AL,17,DIAGONAL0(1),L_PQRS_0(1),DIAGONAL0(2)
AL,14,DIAGONAL0(2),L_PQRS_0(2),DIAGONAL0(3)

! 建立圆面
CYL4,L/2,L/2,D0/2

! 减去不必要的部分
ASEL,A,LOC,X,L/2-D0/2-0.1,L/2+D0/2+0.1
ASBA,A00,ALL,,DELETE,KEEP
ASEL,ALL
*GET,A00,AREA,0,NUM,MAX

! 通过循环创建应变花
K,11,L/2+R2,L/2+GW/2
K,12,L/2+R1,L/2+GW/2
K,13,L/2+R1,L/2-GW/2
K,14,L/2+R2,L/2-GW/2

L,11,12 $ L,12,13
L,13,14 $ L,14,11
L_GAUGE1_4=_RETURN
AL,L_GAUGE1_4-3,L_GAUGE1_4-2,L_GAUGE1_4-1,L_GAUGE1_4

*DIM,DIAGONAL01,ARRAY,4
L,  PQRS_0(1),11 $ DIAGONAL01(1)=_RETURN
L,MIDPOINT(1),12 $ DIAGONAL01(2)=_RETURN
L,MIDPOINT(4),13 $ DIAGONAL01(3)=_RETURN
L,  PQRS_0(4),14 $ DIAGONAL01(4)=_RETURN

AL,L_GAUGE1_4-3,DIAGONAL01(1),DIAGONAL0(1),DIAGONAL01(2)
AL,L_GAUGE1_4-2,DIAGONAL01(2),          15,DIAGONAL01(3)
AL,L_GAUGE1_4-1,DIAGONAL01(3),DIAGONAL0(4),DIAGONAL01(4)
AL,L_GAUGE1_4  ,DIAGONAL01(4), L_PQRS_0(4),DIAGONAL01(1)

K,31,L/2+GW/2,L/2-R1
K,32,L/2-GW/2,L/2-R1
K,33,L/2-GW/2,L/2-R2
K,34,L/2+GW/2,L/2-R2

L,31,32 $ L,32,33
L,33,34 $ L,34,31
L_GAUGE3_4=_RETURN
AL,L_GAUGE3_4-3,L_GAUGE3_4-2,L_GAUGE3_4-1,L_GAUGE3_4

*DIM,DIAGONAL03,ARRAY,4
L,MIDPOINT(4),31 $ DIAGONAL03(1)=_RETURN
L,MIDPOINT(3),32 $ DIAGONAL03(2)=_RETURN
L,  PQRS_0(3),33 $ DIAGONAL03(3)=_RETURN
L,  PQRS_0(4),34 $ DIAGONAL03(4)=_RETURN

AL,L_GAUGE3_4-3,DIAGONAL03(1),          21,DIAGONAL03(2)
AL,L_GAUGE3_4-2,DIAGONAL03(2),DIAGONAL0(3),DIAGONAL03(3)
AL,L_GAUGE3_4-1,DIAGONAL03(3), L_PQRS_0(3),DIAGONAL03(4)
AL,L_GAUGE3_4  ,DIAGONAL03(4),DIAGONAL0(4),DIAGONAL03(1)


!=====网格尺寸控制=====
LSEL,ALL
LSEL,R,LOC,X,L/2-D0/2,L/2+D0/2
LSEL,R,LOC,Y,L/2-D0/2,L/2+D0/2
LPLOT
*DO,I,1,4,1
  LSEL,A,LINE,,DIAGONAL0(I)
  LSEL,A,LINE,,DIAGONAL01(I)
  LSEL,A,LINE,,DIAGONAL03(I)
*ENDDO
LSEL,A,LINE,,L_GAUGE1_4-1
LSEL,A,LINE,,L_GAUGE1_4-3
LSEL,A,LINE,,L_GAUGE3_4
LSEL,A,LINE,,L_GAUGE3_4-2
LPLOT
LESIZE,ALL,,,ENUM_ARC

LSEL,INVE
LESIZE,ALL,,,ENUM_L


ASEL,ALL
ASEL,U,AREA,,A00
MSHKEY,1
AMESH,ALL

ASEL,INVE
MSHAPE,1,2D
MSHKEY,0
AMESH,ALL

ALLSEL,ALL

K,51,,,DEPTH-h
K,52,,,DEPTH
L,3,51
L_CACHE1=_RETURN
L,51,52
L_CACHE2=_RETURN
LESIZE,L_CACHE1,,,5
LESIZE,L_CACHE2,,,n

ASEL,ALL
VDRAG,ALL,,,,,,L_CACHE1,L_CACHE2

!! 选取单元
! 建立柱坐标系, 命名为11
K,100,L/2,L/2  ! 柱坐标系原点
K,101,L,L/2  ! 柱坐标系x轴方向
K,102,L/2,L  ! 柱坐标系"y"轴方向
CSKP,11,1,100,101,102
CSYS,11  ! 打开坐标系11

! 选取单元
ESEL,S,CENT,X,0,D0/2
ESEL,R,CENT,Z,DEPTH-H,DEPTH

!! 对单元进行排序
! 获取最大单元编号
*GET,EMAX,ELEM,,NUM,MAX
! 获取最小单元编号
*GET,EMIN,ELEM,,NUM,MIN
! 获取单元数
*GET,SUM_ELEM,ELEM,,COUNT
! 定义五个维数等于单元数的数组
*DIM,NE,,SUM_ELEM
*DIM,EX,,SUM_ELEM
*DIM,EY,,SUM_ELEM
*DIM,EZ,,SUM_ELEM
*DIM,EORDER,,SUM_ELEM

! 获取单元的编号以及坐标数据
II = 0  ! 辅助变量
*DO,I,EMIN,EMAX,1
  *IF,ESEL(I),EQ,1,THEN
    II = II+1  ! 如果单元被选中
    NE(II) = I  ! 则将其的序号记录在数组NE内
    ! 将其的坐标记录在数组内
    *GET,EX(II),ELEM,NE(II),CENT,X
    *GET,EY(II),ELEM,NE(II),CENT,Y
    *GET,EZ(II),ELEM,NE(II),CENT,Z
  *ENDIF
*ENDDO

!! 这里打算用matlab写一个排序程序
!! 把他封装为exe后在ANSYS里面调用
!! 不然排序太折磨人了
*CREATE,datawrite,mac  ! 创建写出宏
! 写出NE
*CFOPEN,NE,dat
  *VWRITE,NE(1)
  (960F6.0)
*CFCLOSE
! 写出EX
*CFOPEN,EX,dat
  *VWRITE,EX(1)
  (960F11.9)
*CFCLOSE
! 写出EY
*CFOPEN,EY,dat
  *VWRITE,EY(1)
  (960F12.6)
*CFCLOSE
! 写出EZ
*CFOPEN,EZ,dat
  *VWRITE,EZ(1)
  (960F6.3)
*CFCLOSE
*END  ! 宏创建完毕
Datawrite  ! 运行宏文件

!! 运行MATLAB排序文件
/sys,sorting.exe

!! 读入MATLAB排序结果
*CREATE,DATAREAD,mac
*VREAD,EORDER(1),EORDER,dat,,IJK
(f6.0)
*END
DATAREAD

!! 为数据提取做准备
! 激活整体坐标系
CSYS,0

! 提取第一组应变片对应的单元序号
! 选中第一组应变片对应的单元
ESEL,ALL
ESEL,R,CENT,X,L/2+R1,L/2+R2
ESEL,R,CENT,Y,L/2-GW/2,L/2+GW/2
ESEL,R,CENT,Z,DEPTH-DH,DEPTH+DH
! 获取区域内单元最大序号
*GET,NUM_GAUGE1_MAX,ELEM,0,NUM,MAX
! 获取区域内单元最小序号
*GET,NUM_GAUGE1_MIN,ELEM,0,NUM,MIN
! 获取区域内单元数量
*GET,COUNT_STRAIN_GAUGE1,ELEM,0,COUNT
! 定义一个用于储存单元序号的数组
*DIM,STRAIN_GAUGE1,,COUNT_STRAIN_GAUGE1
! 设定一个辅助参数
II=0
! 记录
*DO,I,NUM_GAUGE1_MIN,NUM_GAUGE1_MAX,1
  ! 判断单元是否被选中
  *IF,ESEL(I),EQ,1,THEN
    ! 如果单元被选中
    II=II+1
    ! 则将其记录在数组STRAIN_GAUGE1内
    STRAIN_GAUGE1(II)=I
  *ENDIF
*ENDDO  ! 结束记录

! 提取第三组应变片对应的单元序号
! 选中第三组应变片对应的单元
ESEL,ALL
ESEL,R,CENT,X,L/2-GW/2,L/2+GW/2
ESEL,R,CENT,Y,L/2-R2,L/2-R1
ESEL,R,CENT,Z,DEPTH-DH,DEPTH+DH
! 获取区域内单元最大序号
*GET,NUM_GAUGE3_MAX,ELEM,0,NUM,MAX
! 获取区域内单元最小序号
*GET,NUM_GAUGE3_MIN,ELEM,0,NUM,MIN
! 获取区域内单元数量
*GET,COUNT_STRAIN_GAUGE3,ELEM,0,COUNT
! 定义一个用于储存单元序号的数组
*DIM,STRAIN_GAUGE3,ARRAY,COUNT_STRAIN_GAUGE3
! 设定一个辅助参数
II=0
! 记录
*DO,I,NUM_GAUGE3_MIN,NUM_GAUGE3_MAX,1
  ! 判断单元是否被选中
  *IF,ESEL(I),EQ,1,THEN
    ! 如果单元被选中
    II=II+1
    ! 则将其记录在数组STRAIN_GAUGE2内
    STRAIN_GAUGE3(II)=I
  *ENDIF
*ENDDO  ! 结束记录

! 建立应变矩阵(ANSYS计算不了太复杂的式子)
*DIM,MATRIX_EP1,ARRAY,N,N
*DIM,MATRIX_EP3,ARRAY,N,N
! 建立两个算术用的变量
*SET,SUM_EP,0
*SET,AVG_EP,0


ALLSEL,ALL
FINISH

!!-----求解-----
/SOLU
! 分步求解
*DO,I,1,1,1
! *DO,I,1,N,1
  *DO,K,1,I,1
    /VIEW,1,L,L,L
    /ANG,1

    /SOLU
    ! BIRTH
    ESEL,NONE
    *DO,J,1+(I-1)*(SUM_ELEM/N),I*(SUM_ELEM/N),1
      ESEL,A,ELEM,,EORDER(J)
    *ENDDO
    EALIVE,ALL

    ! 清除所有约束及载荷
    LSCLEAR,ALL

    !! 施加约束
    DK,5,UZ
    !! 施加载荷
    ! 选中右侧待加载单元
    ESEL,ALL
    ESEL,R,CENT,X,L-D/3,L+D/3
    ESEL,R,CENT,Z,DEPTH-I*DH+0.01,DEPTH-(I-1)*DH+0.01
    EPLOT
    SFE,ALL,2,PRES,1,SIGMA_X
  
    ! 选中左侧待加载单元
    ESEL,ALL
    ESEL,R,CENT,X,0-D/3,0+D/3
    ESEL,R,CENT,Z,DEPTH-I*DH+0.01,DEPTH-(I-1)*DH+0.01
    EPLOT
    SFE,ALL,2,PRES,1,SIGMA_X
  
    ALLSEL,ALL
    ESEL,ALL

    ANTYPE,STATIC  ! 设置分析类型为STATIC
    NSUBST,150
    NLGEOM,ON  ! 打开大变形效应
    NROPT,FULL  ! 使用不省略的NEWTON-RAPHSON选项
    LNSRCH,ON
    CNVTOL,F,,0.05,2,0.5
    CNVTOL,U,,0.05,0,1

    SOLVE
    FINISH

    !! 提取数据
    /POST1
    ETABLE,EPTO_Y,EPTO,Y
    ETABLE,EPTO_X,EPTO,X

    *SET,DEP,0 $ *SET,SUM_EP,0
    *DO,II,1,COUNT_STRAIN_GAUGE1,1
      *GET,DEP,ELEM,STRAIN_GAUGE1(II),ETAB,EPTO_Y
      *SET,SUM_EP,SUM_EP+DEP
    *ENDDO
    *SET,EP1_0,SUM_EP/COUNT_STRAIN_GAUGE1

    *SET,DEP,0 $ *SET,SUM_EP,0
    *DO,II,1,COUNT_STRAIN_GAUGE3,1
      *GET,DEP,ELEM,STRAIN_GAUGE3(II),ETAB,EPTO_X
      *SET,SUM_EP,SUM_EP+DEP
    *ENDDO
    *SET,EP3_0,SUM_EP/COUNT_STRAIN_GAUGE3
    FINISH


    !=====第二次求解=====
    /SOLU
    ! DEATH
    *DO,J,1+(I-1)*(SUM_ELEM/N),I*(SUM_ELEM/N),1
      EKILL,EORDER(J)
    *ENDDO

    ! 清除所有约束及载荷
    LSCLEAR,ALL

    !! 施加约束
    DK,5,UZ
    !! 施加载荷
    ! 选中右侧待加载单元
    ESEL,ALL
    ESEL,R,CENT,X,L-D/3,L+D/3
    ESEL,R,CENT,Z,DEPTH-I*DH+0.01,DEPTH-(I-1)*DH+0.01
    EPLOT
    SFE,ALL,2,PRES,1,SIGMA_X
  
    ! 选中左侧待加载单元
    ESEL,ALL
    ESEL,R,CENT,X,0-D/3,0+D/3
    ESEL,R,CENT,Z,DEPTH-I*DH+0.01,DEPTH-(I-1)*DH+0.01
    EPLOT
    SFE,ALL,2,PRES,1,SIGMA_X
  
    ALLSEL,ALL
    EPLOT
    
    ANTYPE,STATIC  ! 设置分析类型为STATIC
    NSUBST,150
    NLGEOM,ON  ! 打开大变形效应
    NROPT,FULL  ! 使用不省略的NEWTON-RAPHSON选项
    LNSRCH,ON
    CNVTOL,F,,0.05,2,0.5
    CNVTOL,U,,0.05,0,1

    SOLVE
    FINISH

    !! 提取数据
    /POST1
    ETABLE,EPTO_Y,EPTO,Y
    ETABLE,EPTO_X,EPTO,X

    *SET,DEP,0 $ *SET,SUM_EP,0
    *DO,II,1,COUNT_STRAIN_GAUGE1,1
      *GET,DEP,ELEM,STRAIN_GAUGE1(II),ETAB,EPTO_X
      *SET,SUM_EP,SUM_EP+DEP
    *ENDDO
    *SET,EP1_1,SUM_EP/COUNT_STRAIN_GAUGE1
    *SET,MATRIX_EP1(I,K),EP1_1-EP1_0

    *SET,DEP,0 $ *SET,SUM_EP,0
    *DO,II,1,COUNT_STRAIN_GAUGE3,1
      *GET,DEP,ELEM,STRAIN_GAUGE3(II),ETAB,EPTO_Y
      *SET,SUM_EP,SUM_EP+DEP
    *ENDDO
    *SET,EP3_1,SUM_EP/COUNT_STRAIN_GAUGE3
    *SET,MATRIX_EP3(I,K),EP3_1-EP3_0
    FINISH
  *ENDDO
*ENDDO


!! 输出应变矩阵
*CREATE,MATRICES_OUTPUT,mac
*MWRITE,MATRIX_EP1,EP1,dat,,JIK,20,20
(20F25.22)
*MWRITE,MATRIX_EP3,EP3,dat,,JIK,20,20
(20F25.22)
*END
MATRICES_OUTPUT

!! 利用matlab进行计算
/sys,calculate.exe

!! 生死单元法
!-----TEST-----
! 选取单元
! CSYS,11
! ESEL,S,CENT,X,0,D0/2
! ESEL,R,CENT,Z,DEPTH-H,DEPTH
! EPLOT

! DEAD OR ALIVE
! *DO,I,1,SUM_ELEM,1
!   EKILL,EORDER(I)
!   ESEL,R,LIVE
!   EPLOT
! *ENDDO

